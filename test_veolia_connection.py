#!/usr/bin/env python3
"""
Script de test pour v√©rifier la connexion √† l'API Veolia
Utilisez ce script pour diagnostiquer les probl√®mes de connexion
"""

import asyncio
import sys
from datetime import datetime
import logging

# Configuration des logs
logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger(__name__)

try:
    from veolia_api import VeoliaAPI
    from veolia_api.exceptions import VeoliaAPIError, VeoliaAPIAuthError, VeoliaAPIInvalidCredentialsError
except ImportError:
    print("‚ùå Erreur: Le module veolia_api n'est pas install√©")
    print("Installez-le avec: pip install veolia_api==1.2.4")
    sys.exit(1)


async def test_veolia_connection():
    """Test de connexion √† l'API Veolia"""
    
    # Demande s√©curis√©e des identifiants
    print("üîê Test de connexion √† l'API Veolia")
    print("=" * 50)
    
    username = input("Nom d'utilisateur Veolia: ").strip()
    if not username:
        print("‚ùå Nom d'utilisateur requis")
        return False
    
    import getpass
    password = getpass.getpass("Mot de passe Veolia: ")
    if not password:
        print("‚ùå Mot de passe requis")
        return False
    
    try:
        print("\nüîÑ Initialisation de l'API...")
        api = VeoliaAPI(username=username, password=password)
        
        print("üîÑ Test de connexion...")
        login_result = await api.login()
        
        if login_result:
            print("‚úÖ Connexion r√©ussie!")
            
            # Test de r√©cup√©ration des donn√©es
            print("üîÑ Test de r√©cup√©ration des donn√©es...")
            now = datetime.now()
            
            try:
                await api.fetch_all_data(now.year, now.month)
                print("‚úÖ R√©cup√©ration des donn√©es r√©ussie!")
                
                if hasattr(api, 'account_data') and api.account_data:
                    print(f"üìä Donn√©es r√©cup√©r√©es: {api.account_data}")
                else:
                    print("‚ö†Ô∏è Aucune donn√©e r√©cup√©r√©e")
                    
            except Exception as e:
                print(f"‚ùå Erreur lors de la r√©cup√©ration des donn√©es: {e}")
                
        else:
            print("‚ùå √âchec de la connexion")
            return False
            
    except VeoliaAPIInvalidCredentialsError:
        print("‚ùå Identifiants invalides - V√©rifiez votre nom d'utilisateur et mot de passe")
        return False
        
    except VeoliaAPIAuthError as e:
        print(f"‚ùå Erreur d'authentification: {e}")
        return False
        
    except VeoliaAPIError as e:
        print(f"‚ùå Erreur de l'API Veolia: {e}")
        return False
        
    except Exception as e:
        print(f"‚ùå Erreur inattendue: {e}")
        logger.exception("Erreur d√©taill√©e:")
        return False
    
    return True


async def main():
    """Fonction principale"""
    print("üß™ Script de diagnostic Veolia API")
    print("Ce script teste la connexion √† l'API Veolia de mani√®re s√©curis√©e\n")
    
    success = await test_veolia_connection()
    
    if success:
        print("\n‚úÖ Test termin√© avec succ√®s!")
        print("Votre int√©gration Home Assistant devrait fonctionner.")
    else:
        print("\n‚ùå Test √©chou√©!")
        print("V√©rifiez:")
        print("- Vos identifiants Veolia")
        print("- Votre connexion internet")
        print("- Que votre compte Veolia est actif")


if __name__ == "__main__":
    asyncio.run(main())
